{
  "pricing": [
    {
      "id": "pricing-cards-grid",
      "name": "Pricing Cards Grid",
      "description": "Clean grid layout with pricing cards and feature comparisons",
      "tags": ["grid", "cards", "comparison", "features", "modern"],
      "style": "modern-clean",
      "complexity": "simple",
      "features": ["pricing-tiers", "feature-lists", "cta-buttons", "popular-badge"],
      "suitable_for": ["saas", "software", "business", "startup"],
      "template": "import { Check, X, Star } from 'lucide-react'\n\ninterface PricingProps {\n  headline: string\n  description: string\n  pricingTiers: Array<{\n    name: string\n    price: string\n    period: string\n    description: string\n    features: string[]\n    notIncluded?: string[]\n    ctaText: string\n    ctaHref: string\n    popular?: boolean\n    badge?: string\n  }>\n  guarantee?: string\n}\n\nexport default function Pricing({ headline, description, pricingTiers, guarantee }: PricingProps) {\n  return (\n    <section className=\"py-20 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {pricingTiers.map((tier, index) => (\n            <div\n              key={index}\n              className={`relative bg-white rounded-lg shadow-sm border ${\n                tier.popular ? 'border-blue-500 ring-2 ring-blue-500' : 'border-gray-200'\n              } p-6`}\n            >\n              {tier.popular && (\n                <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                  <span className=\"bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-semibold\">\n                    Most Popular\n                  </span>\n                </div>\n              )}\n              \n              {tier.badge && (\n                <div className=\"flex items-center justify-center mb-4\">\n                  <span className=\"bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-sm font-semibold\">\n                    {tier.badge}\n                  </span>\n                </div>\n              )}\n              \n              <div className=\"text-center mb-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{tier.name}</h3>\n                <div className=\"mb-2\">\n                  <span className=\"text-4xl font-bold text-gray-900\">{tier.price}</span>\n                  <span className=\"text-gray-600\">/{tier.period}</span>\n                </div>\n                <p className=\"text-gray-600\">{tier.description}</p>\n              </div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                {tier.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center\">\n                    <Check className=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{feature}</span>\n                  </li>\n                ))}\n                {tier.notIncluded?.map((feature, featureIndex) => (\n                  <li key={`not-${featureIndex}`} className=\"flex items-center\">\n                    <X className=\"h-5 w-5 text-gray-400 mr-3 flex-shrink-0\" />\n                    <span className=\"text-gray-500\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n              \n              <a\n                href={tier.ctaHref}\n                className={`block w-full text-center py-3 px-4 rounded-lg font-semibold transition-colors ${\n                  tier.popular\n                    ? 'bg-blue-600 text-white hover:bg-blue-700'\n                    : 'bg-gray-100 text-gray-900 hover:bg-gray-200'\n                }`}\n              >\n                {tier.ctaText}\n              </a>\n            </div>\n          ))}\n        </div>\n        \n        {guarantee && (\n          <div className=\"text-center mt-12\">\n            <p className=\"text-gray-600\">\n              <Star className=\"h-5 w-5 text-yellow-400 inline mr-2\" />\n              {guarantee}\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "pricing-toggle-billing",
      "name": "Pricing with Billing Toggle",
      "description": "Interactive pricing with monthly/yearly billing toggle and savings display",
      "tags": ["toggle", "billing", "savings", "interactive", "modern"],
      "style": "modern-interactive",
      "complexity": "medium",
      "features": ["billing-toggle", "savings-display", "interactive", "discount-badges"],
      "suitable_for": ["saas", "subscription", "software", "services"],
      "template": "'use client'\n\nimport { useState } from 'react'\nimport { Check, Star } from 'lucide-react'\n\ninterface PricingProps {\n  headline: string\n  description: string\n  pricingTiers: Array<{\n    name: string\n    monthlyPrice: string\n    yearlyPrice: string\n    description: string\n    features: string[]\n    ctaText: string\n    ctaHref: string\n    popular?: boolean\n  }>\n  yearlyDiscount: string\n  guarantee?: string\n}\n\nexport default function Pricing({ headline, description, pricingTiers, yearlyDiscount, guarantee }: PricingProps) {\n  const [isYearly, setIsYearly] = useState(false)\n\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n            {description}\n          </p>\n          \n          {/* Billing Toggle */}\n          <div className=\"flex items-center justify-center space-x-4\">\n            <span className={`text-sm ${!isYearly ? 'text-gray-900 font-semibold' : 'text-gray-500'}`}>\n              Monthly\n            </span>\n            <button\n              onClick={() => setIsYearly(!isYearly)}\n              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                isYearly ? 'bg-blue-600' : 'bg-gray-200'\n              }`}\n            >\n              <span\n                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                  isYearly ? 'translate-x-6' : 'translate-x-1'\n                }`}\n              />\n            </button>\n            <span className={`text-sm ${isYearly ? 'text-gray-900 font-semibold' : 'text-gray-500'}`}>\n              Yearly\n            </span>\n            {isYearly && (\n              <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-semibold\">\n                Save {yearlyDiscount}\n              </span>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {pricingTiers.map((tier, index) => (\n            <div\n              key={index}\n              className={`relative bg-white rounded-lg shadow-sm border ${\n                tier.popular ? 'border-blue-500 ring-2 ring-blue-500' : 'border-gray-200'\n              } p-6`}\n            >\n              {tier.popular && (\n                <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                  <span className=\"bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-semibold\">\n                    Most Popular\n                  </span>\n                </div>\n              )}\n              \n              <div className=\"text-center mb-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{tier.name}</h3>\n                <div className=\"mb-2\">\n                  <span className=\"text-4xl font-bold text-gray-900\">\n                    {isYearly ? tier.yearlyPrice : tier.monthlyPrice}\n                  </span>\n                  <span className=\"text-gray-600\">/{isYearly ? 'year' : 'month'}</span>\n                </div>\n                <p className=\"text-gray-600\">{tier.description}</p>\n              </div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                {tier.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center\">\n                    <Check className=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n              \n              <a\n                href={tier.ctaHref}\n                className={`block w-full text-center py-3 px-4 rounded-lg font-semibold transition-colors ${\n                  tier.popular\n                    ? 'bg-blue-600 text-white hover:bg-blue-700'\n                    : 'bg-gray-100 text-gray-900 hover:bg-gray-200'\n                }`}\n              >\n                {tier.ctaText}\n              </a>\n            </div>\n          ))}\n        </div>\n        \n        {guarantee && (\n          <div className=\"text-center mt-12\">\n            <p className=\"text-gray-600\">\n              <Star className=\"h-5 w-5 text-yellow-400 inline mr-2\" />\n              {guarantee}\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "pricing-simple-list",
      "name": "Simple Pricing List",
      "description": "Clean list-style pricing with minimal design and clear CTAs",
      "tags": ["simple", "list", "minimal", "clean"],
      "style": "minimalist-clean",
      "complexity": "simple",
      "features": ["simple-layout", "clear-pricing", "minimal-design"],
      "suitable_for": ["freelancer", "consultant", "simple-services"],
      "template": "import { Check, ArrowRight } from 'lucide-react'\n\ninterface PricingProps {\n  headline: string\n  description: string\n  pricingTiers: Array<{\n    name: string\n    price: string\n    period: string\n    description: string\n    features: string[]\n    ctaText: string\n    ctaHref: string\n  }>\n}\n\nexport default function Pricing({ headline, description, pricingTiers }: PricingProps) {\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600\">\n            {description}\n          </p>\n        </div>\n        \n        <div className=\"space-y-8\">\n          {pricingTiers.map((tier, index) => (\n            <div key={index} className=\"bg-gray-50 rounded-lg p-8\">\n              <div className=\"flex flex-col md:flex-row md:items-center md:justify-between\">\n                <div className=\"mb-6 md:mb-0\">\n                  <h3 className=\"text-2xl font-semibold text-gray-900 mb-2\">{tier.name}</h3>\n                  <p className=\"text-gray-600 mb-4\">{tier.description}</p>\n                  \n                  <div className=\"flex items-baseline mb-4\">\n                    <span className=\"text-3xl font-bold text-gray-900\">{tier.price}</span>\n                    <span className=\"text-gray-600 ml-2\">/{tier.period}</span>\n                  </div>\n                  \n                  <ul className=\"space-y-2\">\n                    {tier.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center\">\n                        <Check className=\"h-4 w-4 text-green-500 mr-2 flex-shrink-0\" />\n                        <span className=\"text-gray-700\">{feature}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                \n                <div className=\"flex-shrink-0\">\n                  <a\n                    href={tier.ctaHref}\n                    className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition-colors\"\n                  >\n                    {tier.ctaText}\n                    <ArrowRight className=\"h-4 w-4 ml-2\" />\n                  </a>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "pricing-professional-services",
      "name": "Professional Services Pricing",
      "description": "Pricing for professional services with consultation options and custom quotes",
      "tags": ["professional", "consultation", "custom-quotes", "business", "services"],
      "style": "professional-trust",
      "complexity": "medium",
      "features": ["consultation-booking", "custom-quotes", "service-packages", "trust-indicators"],
      "suitable_for": ["consulting", "legal", "accounting", "financial", "professional"],
      "template": "import { Check, Phone, Calendar, Award, Users } from 'lucide-react'\n\ninterface PricingProps {\n  headline: string\n  description: string\n  pricingTiers: Array<{\n    name: string\n    price: string\n    period: string\n    description: string\n    features: string[]\n    ctaText: string\n    ctaHref: string\n    consultationType?: string\n    responseTime?: string\n  }>\n  trustMetrics: {\n    clientsServed: string\n    successRate: string\n    yearsExperience: string\n  }\n  consultationOffer?: string\n}\n\nexport default function Pricing({ headline, description, pricingTiers, trustMetrics, consultationOffer }: PricingProps) {\n  return (\n    <section className=\"py-20 bg-slate-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n            {description}\n          </p>\n          \n          {/* Trust Metrics */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-2xl mx-auto\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">{trustMetrics.clientsServed}</div>\n              <div className=\"text-sm text-gray-600\">Clients Served</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">{trustMetrics.successRate}</div>\n              <div className=\"text-sm text-gray-600\">Success Rate</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">{trustMetrics.yearsExperience}</div>\n              <div className=\"text-sm text-gray-600\">Years Experience</div>\n            </div>\n          </div>\n        </div>\n        \n        {consultationOffer && (\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6 mb-12 text-center\">\n            <Phone className=\"h-8 w-8 text-blue-600 mx-auto mb-3\" />\n            <h3 className=\"text-lg font-semibold text-blue-900 mb-2\">Free Initial Consultation</h3>\n            <p className=\"text-blue-700\">{consultationOffer}</p>\n          </div>\n        )}\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {pricingTiers.map((tier, index) => (\n            <div key={index} className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <div className=\"text-center mb-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{tier.name}</h3>\n                \n                {tier.consultationType && (\n                  <div className=\"bg-slate-100 text-slate-700 text-sm px-3 py-1 rounded-full mb-3\">\n                    {tier.consultationType}\n                  </div>\n                )}\n                \n                <div className=\"mb-2\">\n                  <span className=\"text-4xl font-bold text-gray-900\">{tier.price}</span>\n                  <span className=\"text-gray-600\">/{tier.period}</span>\n                </div>\n                <p className=\"text-gray-600\">{tier.description}</p>\n                \n                {tier.responseTime && (\n                  <div className=\"flex items-center justify-center mt-3 text-sm text-green-600\">\n                    <Calendar className=\"h-4 w-4 mr-1\" />\n                    <span>Response within {tier.responseTime}</span>\n                  </div>\n                )}\n              </div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                {tier.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center\">\n                    <Check className=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n              \n              <a\n                href={tier.ctaHref}\n                className=\"block w-full text-center py-3 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-colors\"\n              >\n                {tier.ctaText}\n              </a>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <div className=\"inline-flex items-center text-green-600\">\n            <Award className=\"h-5 w-5 mr-2\" />\n            <span className=\"font-semibold\">Licensed Professionals • Confidential Consultations • Results-Driven Approach</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "pricing-healthcare-medical",
      "name": "Healthcare & Medical Pricing",
      "description": "Medical service pricing with insurance information and treatment packages",
      "tags": ["healthcare", "medical", "insurance", "treatments", "packages"],
      "style": "medical-professional",
      "complexity": "medium",
      "features": ["insurance-info", "treatment-packages", "appointment-booking", "payment-plans"],
      "suitable_for": ["healthcare", "medical", "dental", "clinic", "therapy"],
      "template": "import { Check, Heart, Shield, Calendar, CreditCard } from 'lucide-react'\n\ninterface PricingProps {\n  headline: string\n  description: string\n  pricingTiers: Array<{\n    name: string\n    price: string\n    period?: string\n    description: string\n    features: string[]\n    ctaText: string\n    ctaHref: string\n    treatmentTime?: string\n    insuranceCovered?: boolean\n    paymentPlan?: boolean\n  }>\n  insuranceInfo: {\n    accepted: string[]\n    note: string\n  }\n  paymentOptions: string[]\n}\n\nexport default function Pricing({ headline, description, pricingTiers, insuranceInfo, paymentOptions }: PricingProps) {\n  return (\n    <section className=\"py-20 bg-blue-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        {/* Insurance Information */}\n        <div className=\"bg-white rounded-lg p-6 mb-12 border border-blue-200\">\n          <div className=\"text-center mb-6\">\n            <Shield className=\"h-8 w-8 text-blue-600 mx-auto mb-3\" />\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Insurance & Payment Options</h3>\n            <p className=\"text-gray-600\">{insuranceInfo.note}</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-semibold text-gray-900 mb-3\">Insurance Accepted:</h4>\n              <ul className=\"space-y-1\">\n                {insuranceInfo.accepted.map((insurance, index) => (\n                  <li key={index} className=\"flex items-center text-gray-700\">\n                    <Check className=\"h-4 w-4 text-green-500 mr-2\" />\n                    {insurance}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold text-gray-900 mb-3\">Payment Options:</h4>\n              <ul className=\"space-y-1\">\n                {paymentOptions.map((option, index) => (\n                  <li key={index} className=\"flex items-center text-gray-700\">\n                    <CreditCard className=\"h-4 w-4 text-blue-500 mr-2\" />\n                    {option}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {pricingTiers.map((tier, index) => (\n            <div key={index} className=\"bg-white rounded-lg shadow-sm border border-blue-200 p-6\">\n              <div className=\"text-center mb-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{tier.name}</h3>\n                \n                <div className=\"mb-2\">\n                  <span className=\"text-4xl font-bold text-gray-900\">{tier.price}</span>\n                  {tier.period && <span className=\"text-gray-600\">/{tier.period}</span>}\n                </div>\n                <p className=\"text-gray-600\">{tier.description}</p>\n                \n                <div className=\"flex flex-wrap justify-center gap-2 mt-3\">\n                  {tier.treatmentTime && (\n                    <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">\n                      {tier.treatmentTime}\n                    </span>\n                  )}\n                  {tier.insuranceCovered && (\n                    <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full\">\n                      Insurance Covered\n                    </span>\n                  )}\n                  {tier.paymentPlan && (\n                    <span className=\"bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded-full\">\n                      Payment Plans Available\n                    </span>\n                  )}\n                </div>\n              </div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                {tier.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center\">\n                    <Check className=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n              \n              <a\n                href={tier.ctaHref}\n                className=\"block w-full text-center py-3 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-colors\"\n              >\n                {tier.ctaText}\n              </a>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <div className=\"inline-flex items-center text-green-600\">\n            <Heart className=\"h-5 w-5 mr-2\" />\n            <span className=\"font-semibold\">Licensed Healthcare Providers • HIPAA Compliant • Patient-Centered Care</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "pricing-restaurant-hospitality",
      "name": "Restaurant & Hospitality Pricing",
      "description": "Menu pricing and catering packages for restaurants and hospitality services",
      "tags": ["restaurant", "hospitality", "menu", "catering", "events"],
      "style": "warm-hospitality",
      "complexity": "medium",
      "features": ["menu-packages", "catering-options", "event-pricing", "group-discounts"],
      "suitable_for": ["restaurant", "cafe", "catering", "hotel", "events"],
      "template": "import { Check, Utensils, Users, Calendar, Gift } from 'lucide-react'\n\ninterface PricingProps {\n  headline: string\n  description: string\n  pricingTiers: Array<{\n    name: string\n    price: string\n    period?: string\n    description: string\n    features: string[]\n    ctaText: string\n    ctaHref: string\n    servingSize?: string\n    eventType?: string\n    minimumOrder?: string\n  }>\n  specialOffers: Array<{\n    title: string\n    description: string\n    discount?: string\n  }>\n  cateringInfo: {\n    minimumGuests: string\n    advanceNotice: string\n    deliveryRadius: string\n  }\n}\n\nexport default function Pricing({ headline, description, pricingTiers, specialOffers, cateringInfo }: PricingProps) {\n  return (\n    <section className=\"py-20 bg-amber-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        {/* Special Offers */}\n        {specialOffers.length > 0 && (\n          <div className=\"bg-white rounded-lg p-6 mb-12 border border-amber-200\">\n            <div className=\"text-center mb-6\">\n              <Gift className=\"h-8 w-8 text-amber-600 mx-auto mb-3\" />\n              <h3 className=\"text-lg font-semibold text-gray-900\">Special Offers</h3>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {specialOffers.map((offer, index) => (\n                <div key={index} className=\"bg-amber-50 p-4 rounded-lg\">\n                  <h4 className=\"font-semibold text-amber-900 mb-2\">{offer.title}</h4>\n                  <p className=\"text-amber-700 text-sm mb-2\">{offer.description}</p>\n                  {offer.discount && (\n                    <span className=\"bg-amber-200 text-amber-800 text-xs px-2 py-1 rounded-full font-semibold\">\n                      {offer.discount} OFF\n                    </span>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {pricingTiers.map((tier, index) => (\n            <div key={index} className=\"bg-white rounded-lg shadow-sm border border-amber-200 p-6\">\n              <div className=\"text-center mb-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{tier.name}</h3>\n                \n                <div className=\"mb-2\">\n                  <span className=\"text-4xl font-bold text-gray-900\">{tier.price}</span>\n                  {tier.period && <span className=\"text-gray-600\">/{tier.period}</span>}\n                </div>\n                <p className=\"text-gray-600\">{tier.description}</p>\n                \n                <div className=\"flex flex-wrap justify-center gap-2 mt-3\">\n                  {tier.servingSize && (\n                    <span className=\"bg-amber-100 text-amber-800 text-xs px-2 py-1 rounded-full\">\n                      Serves {tier.servingSize}\n                    </span>\n                  )}\n                  {tier.eventType && (\n                    <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">\n                      {tier.eventType}\n                    </span>\n                  )}\n                  {tier.minimumOrder && (\n                    <span className=\"bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full\">\n                      Min: {tier.minimumOrder}\n                    </span>\n                  )}\n                </div>\n              </div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                {tier.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center\">\n                    <Check className=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n              \n              <a\n                href={tier.ctaHref}\n                className=\"block w-full text-center py-3 px-4 bg-amber-600 text-white rounded-lg font-semibold hover:bg-amber-700 transition-colors\"\n              >\n                {tier.ctaText}\n              </a>\n            </div>\n          ))}\n        </div>\n        \n        {/* Catering Information */}\n        <div className=\"bg-white rounded-lg p-6 mt-12 border border-amber-200\">\n          <div className=\"text-center mb-6\">\n            <Utensils className=\"h-8 w-8 text-amber-600 mx-auto mb-3\" />\n            <h3 className=\"text-lg font-semibold text-gray-900\">Catering Information</h3>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 text-center\">\n            <div>\n              <Users className=\"h-6 w-6 text-amber-600 mx-auto mb-2\" />\n              <div className=\"font-semibold text-gray-900\">Minimum Guests</div>\n              <div className=\"text-gray-600\">{cateringInfo.minimumGuests}</div>\n            </div>\n            <div>\n              <Calendar className=\"h-6 w-6 text-amber-600 mx-auto mb-2\" />\n              <div className=\"font-semibold text-gray-900\">Advance Notice</div>\n              <div className=\"text-gray-600\">{cateringInfo.advanceNotice}</div>\n            </div>\n            <div>\n              <div className=\"w-6 h-6 bg-amber-600 rounded-full mx-auto mb-2\"></div>\n              <div className=\"font-semibold text-gray-900\">Delivery Radius</div>\n              <div className=\"text-gray-600\">{cateringInfo.deliveryRadius}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "pricing-home-services",
      "name": "Home Services Pricing",
      "description": "Service pricing for home contractors with project estimates and hourly rates",
      "tags": ["home-services", "contractor", "estimates", "hourly-rates", "projects"],
      "style": "reliable-professional",
      "complexity": "medium",
      "features": ["project-estimates", "hourly-rates", "emergency-pricing", "service-guarantees"],
      "suitable_for": ["plumbing", "electrical", "hvac", "cleaning", "landscaping", "contractor"],
      "template": "import { Check, Wrench, Clock, Shield, Phone } from 'lucide-react'\n\ninterface PricingProps {\n  headline: string\n  description: string\n  pricingTiers: Array<{\n    name: string\n    price: string\n    period?: string\n    description: string\n    features: string[]\n    ctaText: string\n    ctaHref: string\n    serviceType: string\n    responseTime?: string\n    guarantee?: string\n    emergencyRate?: string\n  }>\n  serviceAreas: string[]\n  emergencyInfo: {\n    available: string\n    surcharge: string\n    responseTime: string\n  }\n}\n\nexport default function Pricing({ headline, description, pricingTiers, serviceAreas, emergencyInfo }: PricingProps) {\n  return (\n    <section className=\"py-20 bg-green-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        {/* Emergency Services */}\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 mb-12\">\n          <div className=\"text-center\">\n            <Phone className=\"h-8 w-8 text-red-600 mx-auto mb-3\" />\n            <h3 className=\"text-lg font-semibold text-red-900 mb-2\">24/7 Emergency Services</h3>\n            <p className=\"text-red-700 mb-3\">\n              Available {emergencyInfo.available} • {emergencyInfo.surcharge} surcharge • {emergencyInfo.responseTime} response\n            </p>\n            <a href=\"tel:+15551234567\" className=\"inline-flex items-center bg-red-600 text-white px-4 py-2 rounded-lg font-semibold hover:bg-red-700 transition-colors\">\n              <Phone className=\"h-4 w-4 mr-2\" />\n              Call Now for Emergency\n            </a>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {pricingTiers.map((tier, index) => (\n            <div key={index} className=\"bg-white rounded-lg shadow-sm border border-green-200 p-6\">\n              <div className=\"text-center mb-6\">\n                <div className=\"bg-green-100 text-green-800 text-sm px-3 py-1 rounded-full mb-3\">\n                  {tier.serviceType}\n                </div>\n                \n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{tier.name}</h3>\n                \n                <div className=\"mb-2\">\n                  <span className=\"text-4xl font-bold text-gray-900\">{tier.price}</span>\n                  {tier.period && <span className=\"text-gray-600\">/{tier.period}</span>}\n                </div>\n                <p className=\"text-gray-600\">{tier.description}</p>\n                \n                <div className=\"flex flex-wrap justify-center gap-2 mt-3\">\n                  {tier.responseTime && (\n                    <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">\n                      <Clock className=\"h-3 w-3 inline mr-1\" />\n                      {tier.responseTime} response\n                    </span>\n                  )}\n                  {tier.guarantee && (\n                    <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full\">\n                      <Shield className=\"h-3 w-3 inline mr-1\" />\n                      {tier.guarantee}\n                    </span>\n                  )}\n                  {tier.emergencyRate && (\n                    <span className=\"bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full\">\n                      Emergency: {tier.emergencyRate}\n                    </span>\n                  )}\n                </div>\n              </div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                {tier.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center\">\n                    <Check className=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n              \n              <a\n                href={tier.ctaHref}\n                className=\"block w-full text-center py-3 px-4 bg-green-600 text-white rounded-lg font-semibold hover:bg-green-700 transition-colors\"\n              >\n                {tier.ctaText}\n              </a>\n            </div>\n          ))}\n        </div>\n        \n        {/* Service Areas */}\n        <div className=\"bg-white rounded-lg p-6 mt-12 border border-green-200\">\n          <div className=\"text-center mb-6\">\n            <Wrench className=\"h-8 w-8 text-green-600 mx-auto mb-3\" />\n            <h3 className=\"text-lg font-semibold text-gray-900\">Service Areas</h3>\n          </div>\n          \n          <div className=\"flex flex-wrap justify-center gap-3\">\n            {serviceAreas.map((area, index) => (\n              <span key={index} className=\"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm\">\n                {area}\n              </span>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <div className=\"inline-flex items-center text-blue-600\">\n            <Shield className=\"h-5 w-5 mr-2\" />\n            <span className=\"font-semibold\">Licensed & Insured • 100% Satisfaction Guarantee • Free Estimates</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "pricing-beauty-wellness",
      "name": "Beauty & Wellness Pricing",
      "description": "Spa and wellness service pricing with treatment packages and membership options",
      "tags": ["beauty", "wellness", "spa", "treatments", "memberships", "packages"],
      "style": "elegant-wellness",
      "complexity": "medium",
      "features": ["treatment-packages", "membership-tiers", "add-on-services", "seasonal-offers"],
      "suitable_for": ["spa", "salon", "wellness", "massage", "beauty", "fitness"],
      "template": "import { Check, Sparkles, Heart, Gift, Clock } from 'lucide-react'\n\ninterface PricingProps {\n  headline: string\n  description: string\n  pricingTiers: Array<{\n    name: string\n    price: string\n    period?: string\n    description: string\n    features: string[]\n    ctaText: string\n    ctaHref: string\n    duration?: string\n    treatmentType?: string\n    membershipBenefit?: string\n    savings?: string\n  }>\n  membershipPerks: string[]\n  addOnServices: Array<{\n    name: string\n    price: string\n    duration: string\n  }>\n}\n\nexport default function Pricing({ headline, description, pricingTiers, membershipPerks, addOnServices }: PricingProps) {\n  return (\n    <section className=\"py-20 bg-rose-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {pricingTiers.map((tier, index) => (\n            <div key={index} className=\"bg-white rounded-lg shadow-sm border border-rose-200 p-6 relative overflow-hidden\">\n              {tier.savings && (\n                <div className=\"absolute top-4 right-4\">\n                  <span className=\"bg-rose-500 text-white px-3 py-1 rounded-full text-sm font-semibold\">\n                    Save {tier.savings}\n                  </span>\n                </div>\n              )}\n              \n              <div className=\"text-center mb-6\">\n                {tier.treatmentType && (\n                  <div className=\"bg-rose-100 text-rose-800 text-sm px-3 py-1 rounded-full mb-3\">\n                    {tier.treatmentType}\n                  </div>\n                )}\n                \n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{tier.name}</h3>\n                \n                <div className=\"mb-2\">\n                  <span className=\"text-4xl font-bold text-gray-900\">{tier.price}</span>\n                  {tier.period && <span className=\"text-gray-600\">/{tier.period}</span>}\n                </div>\n                <p className=\"text-gray-600\">{tier.description}</p>\n                \n                <div className=\"flex flex-wrap justify-center gap-2 mt-3\">\n                  {tier.duration && (\n                    <span className=\"bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded-full\">\n                      <Clock className=\"h-3 w-3 inline mr-1\" />\n                      {tier.duration}\n                    </span>\n                  )}\n                  {tier.membershipBenefit && (\n                    <span className=\"bg-gold-100 text-gold-800 text-xs px-2 py-1 rounded-full\">\n                      <Sparkles className=\"h-3 w-3 inline mr-1\" />\n                      {tier.membershipBenefit}\n                    </span>\n                  )}\n                </div>\n              </div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                {tier.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center\">\n                    <Check className=\"h-5 w-5 text-rose-500 mr-3 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n              \n              <a\n                href={tier.ctaHref}\n                className=\"block w-full text-center py-3 px-4 bg-rose-600 text-white rounded-lg font-semibold hover:bg-rose-700 transition-colors\"\n              >\n                {tier.ctaText}\n              </a>\n            </div>\n          ))}\n        </div>\n        \n        {/* Membership Perks */}\n        {membershipPerks.length > 0 && (\n          <div className=\"bg-white rounded-lg p-6 mt-12 border border-rose-200\">\n            <div className=\"text-center mb-6\">\n              <Heart className=\"h-8 w-8 text-rose-600 mx-auto mb-3\" />\n              <h3 className=\"text-lg font-semibold text-gray-900\">Membership Perks</h3>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {membershipPerks.map((perk, index) => (\n                <div key={index} className=\"flex items-center\">\n                  <Sparkles className=\"h-5 w-5 text-rose-500 mr-3 flex-shrink-0\" />\n                  <span className=\"text-gray-700\">{perk}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        {/* Add-On Services */}\n        {addOnServices.length > 0 && (\n          <div className=\"bg-white rounded-lg p-6 mt-8 border border-rose-200\">\n            <div className=\"text-center mb-6\">\n              <Gift className=\"h-8 w-8 text-rose-600 mx-auto mb-3\" />\n              <h3 className=\"text-lg font-semibold text-gray-900\">Add-On Services</h3>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {addOnServices.map((service, index) => (\n                <div key={index} className=\"bg-rose-50 p-4 rounded-lg text-center\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">{service.name}</h4>\n                  <p className=\"text-rose-600 font-bold\">{service.price}</p>\n                  <p className=\"text-gray-600 text-sm\">{service.duration}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "pricing-real-estate",
      "name": "Real Estate Pricing",
      "description": "Real estate service pricing with commission structures and service packages",
      "tags": ["real-estate", "commission", "property", "services", "packages"],
      "style": "real-estate-professional",
      "complexity": "medium",
      "features": ["commission-structures", "service-packages", "market-analysis", "professional-services"],
      "suitable_for": ["real-estate", "property", "agent", "broker", "property-management"],
      "template": "import { Check, Home, TrendingUp, Award, MapPin, Calculator } from 'lucide-react'\n\ninterface PricingProps {\n  headline: string\n  description: string\n  pricingTiers: Array<{\n    name: string\n    commission: string\n    description: string\n    features: string[]\n    ctaText: string\n    ctaHref: string\n    serviceType: string\n    marketingBudget?: string\n    guarantees?: string[]\n    specialties?: string[]\n  }>\n  marketStats: {\n    avgSalePrice: string\n    avgDaysOnMarket: string\n    successRate: string\n  }\n  serviceAreas: string[]\n}\n\nexport default function Pricing({ headline, description, pricingTiers, marketStats, serviceAreas }: PricingProps) {\n  return (\n    <section className=\"py-20 bg-slate-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n            {description}\n          </p>\n          \n          {/* Market Stats */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-2xl mx-auto\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-slate-700\">{marketStats.avgSalePrice}</div>\n              <div className=\"text-sm text-gray-600\">Avg Sale Price</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-slate-700\">{marketStats.avgDaysOnMarket}</div>\n              <div className=\"text-sm text-gray-600\">Avg Days on Market</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-slate-700\">{marketStats.successRate}</div>\n              <div className=\"text-sm text-gray-600\">Success Rate</div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {pricingTiers.map((tier, index) => (\n            <div key={index} className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-6\">\n              <div className=\"text-center mb-6\">\n                <div className=\"bg-slate-100 text-slate-700 text-sm px-3 py-1 rounded-full mb-3\">\n                  {tier.serviceType}\n                </div>\n                \n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{tier.name}</h3>\n                \n                <div className=\"mb-2\">\n                  <span className=\"text-4xl font-bold text-gray-900\">{tier.commission}</span>\n                  <span className=\"text-gray-600\"> commission</span>\n                </div>\n                <p className=\"text-gray-600\">{tier.description}</p>\n                \n                <div className=\"flex flex-wrap justify-center gap-2 mt-3\">\n                  {tier.marketingBudget && (\n                    <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">\n                      <TrendingUp className=\"h-3 w-3 inline mr-1\" />\n                      {tier.marketingBudget} marketing\n                    </span>\n                  )}\n                  {tier.specialties && tier.specialties.length > 0 && (\n                    <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full\">\n                      <Award className=\"h-3 w-3 inline mr-1\" />\n                      {tier.specialties[0]}\n                    </span>\n                  )}\n                </div>\n              </div>\n              \n              <ul className=\"space-y-3 mb-6\">\n                {tier.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center\">\n                    <Check className=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n              \n              {tier.guarantees && tier.guarantees.length > 0 && (\n                <div className=\"bg-green-50 p-3 rounded-lg mb-4\">\n                  <h4 className=\"font-semibold text-green-900 text-sm mb-2\">Our Guarantees:</h4>\n                  <ul className=\"space-y-1\">\n                    {tier.guarantees.map((guarantee, guaranteeIndex) => (\n                      <li key={guaranteeIndex} className=\"text-green-700 text-sm flex items-center\">\n                        <Check className=\"h-3 w-3 text-green-500 mr-2 flex-shrink-0\" />\n                        {guarantee}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n              \n              <a\n                href={tier.ctaHref}\n                className=\"block w-full text-center py-3 px-4 bg-slate-700 text-white rounded-lg font-semibold hover:bg-slate-800 transition-colors\"\n              >\n                {tier.ctaText}\n              </a>\n            </div>\n          ))}\n        </div>\n        \n        {/* Service Areas */}\n        <div className=\"bg-white rounded-lg p-6 mt-12 border border-slate-200\">\n          <div className=\"text-center mb-6\">\n            <MapPin className=\"h-8 w-8 text-slate-600 mx-auto mb-3\" />\n            <h3 className=\"text-lg font-semibold text-gray-900\">Service Areas</h3>\n          </div>\n          \n          <div className=\"flex flex-wrap justify-center gap-3\">\n            {serviceAreas.map((area, index) => (\n              <span key={index} className=\"bg-slate-100 text-slate-700 px-3 py-1 rounded-full text-sm\">\n                {area}\n              </span>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <div className=\"inline-flex items-center text-green-600\">\n            <Award className=\"h-5 w-5 mr-2\" />\n            <span className=\"font-semibold\">Licensed Realtor • MLS Member • Top Producer • Market Expert</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    }
  ]
}
