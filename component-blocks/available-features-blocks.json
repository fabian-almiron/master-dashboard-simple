{
  "features": [
    {
      "id": "features-grid-icons",
      "name": "Grid Features with Icons",
      "description": "Clean grid layout with icons and feature descriptions",
      "tags": ["grid", "icons", "clean", "modern", "business"],
      "style": "modern-minimalist",
      "complexity": "simple",
      "features": ["icon-grid", "feature-descriptions", "responsive-layout"],
      "suitable_for": ["business", "saas", "tech", "startup"],
      "template": "import { Check, Shield, Zap, Users, Globe, Award } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    icon: string\n    title: string\n    description: string\n  }>\n}\n\nconst iconMap = {\n  check: Check,\n  shield: Shield,\n  zap: Zap,\n  users: Users,\n  globe: Globe,\n  award: Award\n}\n\nexport default function Features({ headline, description, features }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => {\n            const IconComponent = iconMap[feature.icon as keyof typeof iconMap] || Check\n            return (\n              <div key={index} className=\"bg-white p-6 rounded-lg shadow-sm hover:shadow-md transition-shadow\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4\">\n                  <IconComponent className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-600\">\n                  {feature.description}\n                </p>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-alternating-layout",
      "name": "Alternating Features Layout",
      "description": "Features with alternating image and text layout",
      "tags": ["alternating", "images", "detailed", "modern"],
      "style": "modern-professional",
      "complexity": "medium",
      "features": ["alternating-layout", "feature-images", "detailed-descriptions"],
      "suitable_for": ["business", "agency", "product", "services"],
      "template": "import Image from 'next/image'\nimport { ArrowRight } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    title: string\n    description: string\n    image: string\n    benefits: string[]\n  }>\n}\n\nexport default function Features({ headline, description, features }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        <div className=\"space-y-20\">\n          {features.map((feature, index) => (\n            <div key={index} className={`grid grid-cols-1 lg:grid-cols-2 gap-12 items-center ${\n              index % 2 === 1 ? 'lg:grid-flow-col-dense' : ''\n            }`}>\n              <div className={index % 2 === 1 ? 'lg:col-start-2' : ''}>\n                <h3 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-4\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-lg text-gray-600 mb-6\">\n                  {feature.description}\n                </p>\n                <ul className=\"space-y-3\">\n                  {feature.benefits.map((benefit, benefitIndex) => (\n                    <li key={benefitIndex} className=\"flex items-center\">\n                      <ArrowRight className=\"h-5 w-5 text-blue-600 mr-3\" />\n                      <span className=\"text-gray-700\">{benefit}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className={index % 2 === 1 ? 'lg:col-start-1' : ''}>\n                <Image\n                  src={feature.image}\n                  alt={feature.title}\n                  width={600}\n                  height={400}\n                  className=\"rounded-lg shadow-xl\"\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-centered-list",
      "name": "Centered Features List",
      "description": "Simple centered list of features with checkmarks",
      "tags": ["centered", "simple", "list", "clean"],
      "style": "minimalist-clean",
      "complexity": "simple",
      "features": ["centered-layout", "checkmark-list", "simple-design"],
      "suitable_for": ["landing", "simple-sites", "portfolio"],
      "template": "import { Check } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: string[]\n}\n\nexport default function Features({ headline, description, features }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n        <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n          {headline}\n        </h2>\n        <p className=\"text-xl text-gray-600 mb-12\">\n          {description}\n        </p>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 max-w-2xl mx-auto\">\n          {features.map((feature, index) => (\n            <div key={index} className=\"flex items-center justify-center md:justify-start\">\n              <Check className=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0\" />\n              <span className=\"text-gray-700\">{feature}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-professional-services",
      "name": "Professional Services Features",
      "description": "Trust-focused features for professional service businesses",
      "tags": ["professional", "trust", "credentials", "services", "expertise"],
      "style": "professional-trust",
      "complexity": "medium",
      "features": ["trust-indicators", "credentials", "service-highlights", "professional-icons"],
      "suitable_for": ["consulting", "legal", "accounting", "financial", "professional"],
      "template": "import { Shield, Award, Users, Clock, CheckCircle, Scale } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    icon: string\n    title: string\n    description: string\n    metric?: string\n  }>\n  credentials: string[]\n}\n\nconst iconMap = {\n  shield: Shield,\n  award: Award,\n  users: Users,\n  clock: Clock,\n  check: CheckCircle,\n  scale: Scale\n}\n\nexport default function Features({ headline, description, features, credentials }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-slate-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n            {description}\n          </p>\n          \n          {/* Credentials */}\n          <div className=\"flex flex-wrap justify-center gap-3\">\n            {credentials.map((credential, index) => (\n              <span key={index} className=\"bg-blue-100 text-blue-800 text-sm px-3 py-1 rounded-full\">\n                {credential}\n              </span>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => {\n            const IconComponent = iconMap[feature.icon as keyof typeof iconMap] || Shield\n            return (\n              <div key={index} className=\"bg-white p-6 rounded-lg shadow-sm border border-slate-200\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mr-4\">\n                    <IconComponent className=\"h-6 w-6 text-blue-600\" />\n                  </div>\n                  {feature.metric && (\n                    <div className=\"text-right\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{feature.metric}</div>\n                    </div>\n                  )}\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-600\">\n                  {feature.description}\n                </p>\n              </div>\n            )\n          })}\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <div className=\"inline-flex items-center text-green-600\">\n            <Shield className=\"h-5 w-5 mr-2\" />\n            <span className=\"font-semibold\">Licensed, Bonded & Insured Professional Services</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-healthcare-medical",
      "name": "Healthcare & Medical Features",
      "description": "Patient-focused features for healthcare services",
      "tags": ["healthcare", "medical", "patient-care", "trust", "services"],
      "style": "medical-compassionate",
      "complexity": "medium",
      "features": ["patient-focus", "medical-services", "trust-indicators", "care-highlights"],
      "suitable_for": ["healthcare", "medical", "dental", "clinic", "therapy"],
      "template": "import { Heart, Shield, Clock, Users, Award, Stethoscope } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    icon: string\n    title: string\n    description: string\n    highlight?: string\n  }>\n  patientStats: {\n    yearsExperience: string\n    patientsServed: string\n    satisfactionRate: string\n  }\n}\n\nconst iconMap = {\n  heart: Heart,\n  shield: Shield,\n  clock: Clock,\n  users: Users,\n  award: Award,\n  stethoscope: Stethoscope\n}\n\nexport default function Features({ headline, description, features, patientStats }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-blue-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n            {description}\n          </p>\n          \n          {/* Patient Stats */}\n          <div className=\"grid grid-cols-3 gap-8 max-w-2xl mx-auto\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">{patientStats.yearsExperience}</div>\n              <div className=\"text-sm text-gray-600\">Years Experience</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">{patientStats.patientsServed}</div>\n              <div className=\"text-sm text-gray-600\">Patients Served</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">{patientStats.satisfactionRate}</div>\n              <div className=\"text-sm text-gray-600\">Satisfaction Rate</div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => {\n            const IconComponent = iconMap[feature.icon as keyof typeof iconMap] || Heart\n            return (\n              <div key={index} className=\"bg-white p-6 rounded-lg shadow-sm border border-blue-200\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4\">\n                  <IconComponent className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-600 mb-3\">\n                  {feature.description}\n                </p>\n                {feature.highlight && (\n                  <div className=\"bg-blue-50 text-blue-800 text-sm px-3 py-1 rounded-full inline-block\">\n                    {feature.highlight}\n                  </div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <div className=\"inline-flex items-center text-green-600\">\n            <Shield className=\"h-5 w-5 mr-2\" />\n            <span className=\"font-semibold\">HIPAA Compliant • Licensed Healthcare Providers</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-restaurant-hospitality",
      "name": "Restaurant & Hospitality Features",
      "description": "Dining experience features for restaurants and hospitality",
      "tags": ["restaurant", "hospitality", "dining", "experience", "food"],
      "style": "warm-hospitality",
      "complexity": "medium",
      "features": ["dining-experience", "food-highlights", "ambiance", "service-features"],
      "suitable_for": ["restaurant", "cafe", "hotel", "catering", "hospitality"],
      "template": "import { Utensils, Star, Clock, Users, Award, Heart } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    icon: string\n    title: string\n    description: string\n    badge?: string\n  }>\n  highlights: {\n    rating: string\n    reviews: string\n    specialties: string[]\n  }\n}\n\nconst iconMap = {\n  utensils: Utensils,\n  star: Star,\n  clock: Clock,\n  users: Users,\n  award: Award,\n  heart: Heart\n}\n\nexport default function Features({ headline, description, features, highlights }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-amber-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n            {description}\n          </p>\n          \n          {/* Restaurant Highlights */}\n          <div className=\"flex flex-wrap justify-center items-center gap-6 mb-8\">\n            <div className=\"flex items-center\">\n              <div className=\"flex\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"h-5 w-5 text-yellow-400 fill-current\" />\n                ))}\n              </div>\n              <span className=\"ml-2 font-semibold text-gray-900\">{highlights.rating}</span>\n              <span className=\"ml-1 text-gray-600\">({highlights.reviews} reviews)</span>\n            </div>\n          </div>\n          \n          {/* Specialties */}\n          <div className=\"flex flex-wrap justify-center gap-3\">\n            {highlights.specialties.map((specialty, index) => (\n              <span key={index} className=\"bg-amber-100 text-amber-800 text-sm px-3 py-1 rounded-full\">\n                {specialty}\n              </span>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => {\n            const IconComponent = iconMap[feature.icon as keyof typeof iconMap] || Utensils\n            return (\n              <div key={index} className=\"bg-white p-6 rounded-lg shadow-sm border border-amber-200\">\n                <div className=\"w-12 h-12 bg-amber-100 rounded-lg flex items-center justify-center mb-4\">\n                  <IconComponent className=\"h-6 w-6 text-amber-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-600 mb-3\">\n                  {feature.description}\n                </p>\n                {feature.badge && (\n                  <div className=\"bg-amber-50 text-amber-800 text-sm px-3 py-1 rounded-full inline-block\">\n                    {feature.badge}\n                  </div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <div className=\"inline-flex items-center text-green-600\">\n            <Heart className=\"h-5 w-5 mr-2\" />\n            <span className=\"font-semibold\">Locally Owned • Fresh Ingredients Daily • Farm-to-Table</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-home-services",
      "name": "Home Services Features",
      "description": "Reliable features for home service contractors with guarantees",
      "tags": ["home-services", "contractor", "reliable", "guarantees", "emergency"],
      "style": "reliable-professional",
      "complexity": "medium",
      "features": ["service-guarantees", "emergency-availability", "licensing-info", "service-areas"],
      "suitable_for": ["plumbing", "electrical", "hvac", "cleaning", "landscaping", "contractor"],
      "template": "import { Wrench, Shield, Clock, MapPin, Award, CheckCircle } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    icon: string\n    title: string\n    description: string\n    guarantee?: string\n  }>\n  serviceInfo: {\n    responseTime: string\n    serviceAreas: string\n    yearsExperience: string\n    jobsCompleted: string\n  }\n}\n\nconst iconMap = {\n  wrench: Wrench,\n  shield: Shield,\n  clock: Clock,\n  mapPin: MapPin,\n  award: Award,\n  check: CheckCircle\n}\n\nexport default function Features({ headline, description, features, serviceInfo }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-green-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n            {description}\n          </p>\n          \n          {/* Service Stats */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 max-w-3xl mx-auto\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{serviceInfo.responseTime}</div>\n              <div className=\"text-sm text-gray-600\">Response Time</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{serviceInfo.yearsExperience}</div>\n              <div className=\"text-sm text-gray-600\">Years Experience</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{serviceInfo.jobsCompleted}</div>\n              <div className=\"text-sm text-gray-600\">Jobs Completed</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-xs text-gray-600 mb-1\">Service Areas</div>\n              <div className=\"text-sm font-semibold text-green-600\">{serviceInfo.serviceAreas}</div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => {\n            const IconComponent = iconMap[feature.icon as keyof typeof iconMap] || Wrench\n            return (\n              <div key={index} className=\"bg-white p-6 rounded-lg shadow-sm border border-green-200\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4\">\n                  <IconComponent className=\"h-6 w-6 text-green-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-600 mb-3\">\n                  {feature.description}\n                </p>\n                {feature.guarantee && (\n                  <div className=\"bg-green-50 text-green-800 text-sm px-3 py-1 rounded-full inline-block\">\n                    ✓ {feature.guarantee}\n                  </div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <div className=\"inline-flex items-center text-blue-600\">\n            <Shield className=\"h-5 w-5 mr-2\" />\n            <span className=\"font-semibold\">Licensed, Bonded & Insured • 100% Satisfaction Guarantee</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-beauty-wellness",
      "name": "Beauty & Wellness Features",
      "description": "Serene features for beauty and wellness services with treatment highlights",
      "tags": ["beauty", "wellness", "spa", "treatments", "relaxation", "self-care"],
      "style": "elegant-wellness",
      "complexity": "medium",
      "features": ["treatment-highlights", "wellness-benefits", "spa-amenities", "self-care-focus"],
      "suitable_for": ["spa", "salon", "wellness", "massage", "beauty", "fitness"],
      "template": "import { Heart, Sparkles, Leaf, Clock, Star, Gift } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    icon: string\n    title: string\n    description: string\n    duration?: string\n  }>\n  wellness: {\n    treatments: string\n    experience: string\n    satisfaction: string\n    awards: string[]\n  }\n}\n\nconst iconMap = {\n  heart: Heart,\n  sparkles: Sparkles,\n  leaf: Leaf,\n  clock: Clock,\n  star: Star,\n  gift: Gift\n}\n\nexport default function Features({ headline, description, features, wellness }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-rose-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n            {description}\n          </p>\n          \n          {/* Wellness Stats */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-2xl mx-auto mb-8\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-rose-600\">{wellness.treatments}</div>\n              <div className=\"text-sm text-gray-600\">Signature Treatments</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-rose-600\">{wellness.experience}</div>\n              <div className=\"text-sm text-gray-600\">Years Experience</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-rose-600\">{wellness.satisfaction}</div>\n              <div className=\"text-sm text-gray-600\">Client Satisfaction</div>\n            </div>\n          </div>\n          \n          {/* Awards */}\n          <div className=\"flex flex-wrap justify-center gap-3\">\n            {wellness.awards.map((award, index) => (\n              <span key={index} className=\"bg-rose-100 text-rose-800 text-sm px-3 py-1 rounded-full\">\n                ⭐ {award}\n              </span>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => {\n            const IconComponent = iconMap[feature.icon as keyof typeof iconMap] || Heart\n            return (\n              <div key={index} className=\"bg-white p-6 rounded-lg shadow-sm border border-rose-200\">\n                <div className=\"w-12 h-12 bg-rose-100 rounded-lg flex items-center justify-center mb-4\">\n                  <IconComponent className=\"h-6 w-6 text-rose-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-600 mb-3\">\n                  {feature.description}\n                </p>\n                {feature.duration && (\n                  <div className=\"bg-rose-50 text-rose-800 text-sm px-3 py-1 rounded-full inline-block\">\n                    ⏱️ {feature.duration}\n                  </div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <div className=\"inline-flex items-center text-green-600\">\n            <Leaf className=\"h-5 w-5 mr-2\" />\n            <span className=\"font-semibold\">Organic Products • Cruelty-Free • Eco-Friendly Practices</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-real-estate",
      "name": "Real Estate Features",
      "description": "Professional features for real estate services with market expertise",
      "tags": ["real-estate", "property", "market", "expertise", "professional", "listings"],
      "style": "real-estate-professional",
      "complexity": "medium",
      "features": ["market-expertise", "property-services", "client-support", "market-analysis"],
      "suitable_for": ["real-estate", "property", "agent", "broker", "property-management"],
      "template": "import { Home, TrendingUp, Users, Award, MapPin, Search } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    icon: string\n    title: string\n    description: string\n    specialty?: string\n  }>\n  marketData: {\n    propertiesSold: string\n    avgDaysOnMarket: string\n    clientSatisfaction: string\n    marketAreas: string[]\n  }\n}\n\nconst iconMap = {\n  home: Home,\n  trending: TrendingUp,\n  users: Users,\n  award: Award,\n  mapPin: MapPin,\n  search: Search\n}\n\nexport default function Features({ headline, description, features, marketData }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-slate-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n            {description}\n          </p>\n          \n          {/* Market Performance */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-2xl mx-auto mb-8\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-slate-700\">{marketData.propertiesSold}</div>\n              <div className=\"text-sm text-gray-600\">Properties Sold</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-slate-700\">{marketData.avgDaysOnMarket}</div>\n              <div className=\"text-sm text-gray-600\">Avg Days on Market</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-slate-700\">{marketData.clientSatisfaction}</div>\n              <div className=\"text-sm text-gray-600\">Client Satisfaction</div>\n            </div>\n          </div>\n          \n          {/* Market Areas */}\n          <div className=\"flex flex-wrap justify-center gap-3\">\n            {marketData.marketAreas.map((area, index) => (\n              <span key={index} className=\"bg-slate-100 text-slate-700 text-sm px-3 py-1 rounded-full\">\n                📍 {area}\n              </span>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => {\n            const IconComponent = iconMap[feature.icon as keyof typeof iconMap] || Home\n            return (\n              <div key={index} className=\"bg-white p-6 rounded-lg shadow-sm border border-slate-200\">\n                <div className=\"w-12 h-12 bg-slate-100 rounded-lg flex items-center justify-center mb-4\">\n                  <IconComponent className=\"h-6 w-6 text-slate-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-600 mb-3\">\n                  {feature.description}\n                </p>\n                {feature.specialty && (\n                  <div className=\"bg-slate-50 text-slate-700 text-sm px-3 py-1 rounded-full inline-block\">\n                    🏆 {feature.specialty}\n                  </div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <div className=\"inline-flex items-center text-green-600\">\n            <Award className=\"h-5 w-5 mr-2\" />\n            <span className=\"font-semibold\">Licensed Realtor • MLS Member • Top 1% Producer</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-image-cards",
      "name": "Image Feature Cards",
      "description": "Feature cards with background images and overlay text for visual impact",
      "tags": ["image-cards", "visual", "modern", "overlay", "creative"],
      "style": "visual-modern",
      "complexity": "medium",
      "features": ["background-images", "overlay-text", "hover-effects", "visual-impact"],
      "suitable_for": ["creative", "agency", "portfolio", "design", "photography"],
      "template": "import Image from 'next/image'\nimport { ArrowRight } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    title: string\n    description: string\n    image: string\n    link?: string\n  }>\n}\n\nexport default function Features({ headline, description, features }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-gray-900\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-white mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => (\n            <div key={index} className=\"group relative overflow-hidden rounded-xl aspect-[4/3] cursor-pointer\">\n              <Image\n                src={feature.image}\n                alt={feature.title}\n                fill\n                className=\"object-cover transition-transform duration-500 group-hover:scale-110\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\" />\n              <div className=\"absolute inset-0 p-6 flex flex-col justify-end\">\n                <h3 className=\"text-xl font-bold text-white mb-2 transform transition-transform duration-300 group-hover:translate-y-[-4px]\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-gray-200 text-sm mb-4 opacity-90\">\n                  {feature.description}\n                </p>\n                {feature.link && (\n                  <div className=\"flex items-center text-blue-400 text-sm font-medium opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                    <span>Learn More</span>\n                    <ArrowRight className=\"h-4 w-4 ml-1 transform transition-transform group-hover:translate-x-1\" />\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-split-showcase",
      "name": "Split Feature Showcase",
      "description": "Large feature showcase with split layout and detailed imagery",
      "tags": ["split-layout", "showcase", "detailed", "premium", "large-images"],
      "style": "premium-showcase",
      "complexity": "complex",
      "features": ["split-layout", "large-images", "detailed-content", "premium-design"],
      "suitable_for": ["premium", "luxury", "high-end", "product", "showcase"],
      "template": "import Image from 'next/image'\nimport { Check, ArrowRight, Star } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  mainFeature: {\n    title: string\n    description: string\n    image: string\n    benefits: string[]\n    stats?: { label: string; value: string }[]\n  }\n  secondaryFeatures: Array<{\n    title: string\n    description: string\n    image: string\n  }>\n}\n\nexport default function Features({ headline, description, mainFeature, secondaryFeatures }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        {/* Main Feature */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center mb-20\">\n          <div>\n            <h3 className=\"text-3xl font-bold text-gray-900 mb-6\">\n              {mainFeature.title}\n            </h3>\n            <p className=\"text-lg text-gray-600 mb-8\">\n              {mainFeature.description}\n            </p>\n            \n            {/* Benefits */}\n            <div className=\"space-y-4 mb-8\">\n              {mainFeature.benefits.map((benefit, index) => (\n                <div key={index} className=\"flex items-start\">\n                  <div className=\"flex-shrink-0 w-6 h-6 bg-green-100 rounded-full flex items-center justify-center mt-0.5\">\n                    <Check className=\"h-4 w-4 text-green-600\" />\n                  </div>\n                  <span className=\"ml-3 text-gray-700\">{benefit}</span>\n                </div>\n              ))}\n            </div>\n            \n            {/* Stats */}\n            {mainFeature.stats && (\n              <div className=\"grid grid-cols-2 gap-6 mb-8\">\n                {mainFeature.stats.map((stat, index) => (\n                  <div key={index} className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-blue-600\">{stat.value}</div>\n                    <div className=\"text-sm text-gray-600\">{stat.label}</div>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            <button className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition-colors\">\n              Explore Feature\n              <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </button>\n          </div>\n          \n          <div className=\"relative\">\n            <Image\n              src={mainFeature.image}\n              alt={mainFeature.title}\n              width={600}\n              height={500}\n              className=\"rounded-2xl shadow-2xl\"\n            />\n            <div className=\"absolute -top-4 -right-4 bg-blue-600 text-white p-3 rounded-full\">\n              <Star className=\"h-6 w-6\" />\n            </div>\n          </div>\n        </div>\n        \n        {/* Secondary Features */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {secondaryFeatures.map((feature, index) => (\n            <div key={index} className=\"group\">\n              <div className=\"relative overflow-hidden rounded-xl mb-6\">\n                <Image\n                  src={feature.image}\n                  alt={feature.title}\n                  width={400}\n                  height={250}\n                  className=\"w-full h-64 object-cover transition-transform duration-300 group-hover:scale-105\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n              </div>\n              <h4 className=\"text-xl font-semibold text-gray-900 mb-3\">\n                {feature.title}\n              </h4>\n              <p className=\"text-gray-600\">\n                {feature.description}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-interactive-tabs",
      "name": "Interactive Tabbed Features",
      "description": "Interactive tabbed interface with feature images and detailed content",
      "tags": ["interactive", "tabs", "dynamic", "engaging", "modern"],
      "style": "interactive-modern",
      "complexity": "complex",
      "features": ["tabbed-interface", "interactive-content", "feature-images", "dynamic-switching"],
      "suitable_for": ["saas", "tech", "software", "product", "interactive"],
      "template": "'use client'\n\nimport { useState } from 'react'\nimport Image from 'next/image'\nimport { Check, ArrowRight } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    id: string\n    title: string\n    description: string\n    image: string\n    benefits: string[]\n    icon: string\n  }>\n}\n\nexport default function Features({ headline, description, features }: FeaturesProps) {\n  const [activeTab, setActiveTab] = useState(features[0]?.id || '')\n  const activeFeature = features.find(f => f.id === activeTab) || features[0]\n  \n  return (\n    <section className=\"py-20 bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        <div className=\"bg-white rounded-2xl shadow-xl overflow-hidden\">\n          {/* Tab Navigation */}\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"flex space-x-8 px-8\" aria-label=\"Tabs\">\n              {features.map((feature) => (\n                <button\n                  key={feature.id}\n                  onClick={() => setActiveTab(feature.id)}\n                  className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                    activeTab === feature.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  {feature.title}\n                </button>\n              ))}\n            </nav>\n          </div>\n          \n          {/* Tab Content */}\n          <div className=\"p-8\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n              <div>\n                <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                  {activeFeature.title}\n                </h3>\n                <p className=\"text-lg text-gray-600 mb-6\">\n                  {activeFeature.description}\n                </p>\n                \n                <div className=\"space-y-3 mb-8\">\n                  {activeFeature.benefits.map((benefit, index) => (\n                    <div key={index} className=\"flex items-center\">\n                      <div className=\"flex-shrink-0 w-5 h-5 bg-green-100 rounded-full flex items-center justify-center\">\n                        <Check className=\"h-3 w-3 text-green-600\" />\n                      </div>\n                      <span className=\"ml-3 text-gray-700\">{benefit}</span>\n                    </div>\n                  ))}\n                </div>\n                \n                <button className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition-colors\">\n                  Learn More\n                  <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </button>\n              </div>\n              \n              <div className=\"relative\">\n                <div className=\"aspect-[4/3] relative overflow-hidden rounded-xl\">\n                  <Image\n                    src={activeFeature.image}\n                    alt={activeFeature.title}\n                    fill\n                    className=\"object-cover transition-opacity duration-300\"\n                  />\n                </div>\n                <div className=\"absolute -bottom-4 -right-4 bg-blue-600 text-white p-3 rounded-full shadow-lg\">\n                  <span className=\"text-lg\">{activeFeature.icon}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-timeline-story",
      "name": "Timeline Feature Story",
      "description": "Timeline-based feature presentation telling a story or process",
      "tags": ["timeline", "story", "process", "journey", "narrative"],
      "style": "narrative-timeline",
      "complexity": "medium",
      "features": ["timeline-layout", "story-telling", "process-flow", "visual-journey"],
      "suitable_for": ["process", "journey", "story", "education", "onboarding"],
      "template": "import Image from 'next/image'\nimport { CheckCircle, ArrowDown } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  timelineSteps: Array<{\n    step: number\n    title: string\n    description: string\n    image: string\n    details: string[]\n    duration?: string\n  }>\n}\n\nexport default function Features({ headline, description, timelineSteps }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-gray-50\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        <div className=\"relative\">\n          {/* Timeline Line */}\n          <div className=\"absolute left-8 top-0 bottom-0 w-0.5 bg-blue-200 hidden md:block\" />\n          \n          <div className=\"space-y-12\">\n            {timelineSteps.map((step, index) => (\n              <div key={index} className=\"relative\">\n                {/* Timeline Dot */}\n                <div className=\"absolute left-6 w-4 h-4 bg-blue-600 rounded-full border-4 border-white shadow-lg hidden md:block\" />\n                \n                <div className=\"md:ml-16\">\n                  <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n                    <div className=\"md:flex\">\n                      <div className=\"md:w-1/2\">\n                        <Image\n                          src={step.image}\n                          alt={step.title}\n                          width={400}\n                          height={300}\n                          className=\"w-full h-64 md:h-full object-cover\"\n                        />\n                      </div>\n                      <div className=\"md:w-1/2 p-8\">\n                        <div className=\"flex items-center mb-4\">\n                          <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold mr-3\">\n                            {step.step}\n                          </div>\n                          {step.duration && (\n                            <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">\n                              {step.duration}\n                            </span>\n                          )}\n                        </div>\n                        \n                        <h3 className=\"text-xl font-bold text-gray-900 mb-3\">\n                          {step.title}\n                        </h3>\n                        <p className=\"text-gray-600 mb-4\">\n                          {step.description}\n                        </p>\n                        \n                        <div className=\"space-y-2\">\n                          {step.details.map((detail, detailIndex) => (\n                            <div key={detailIndex} className=\"flex items-start\">\n                              <CheckCircle className=\"h-4 w-4 text-green-500 mt-0.5 mr-2 flex-shrink-0\" />\n                              <span className=\"text-sm text-gray-700\">{detail}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Arrow for next step */}\n                {index < timelineSteps.length - 1 && (\n                  <div className=\"flex justify-center mt-8 md:ml-16\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                      <ArrowDown className=\"h-4 w-4 text-blue-600\" />\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-comparison-grid",
      "name": "Feature Comparison Grid",
      "description": "Side-by-side comparison grid with before/after or competitive analysis",
      "tags": ["comparison", "before-after", "competitive", "analysis", "grid"],
      "style": "comparison-analytical",
      "complexity": "medium",
      "features": ["comparison-layout", "before-after", "competitive-analysis", "visual-comparison"],
      "suitable_for": ["comparison", "competitive", "improvement", "analysis", "business"],
      "template": "import Image from 'next/image'\nimport { Check, X, ArrowRight, Trophy } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  comparison: {\n    leftSide: {\n      title: string\n      subtitle: string\n      image: string\n      features: Array<{ text: string; included: boolean }>\n    }\n    rightSide: {\n      title: string\n      subtitle: string\n      image: string\n      features: Array<{ text: string; included: boolean }>\n    }\n  }\n  additionalFeatures?: Array<{\n    title: string\n    description: string\n    image: string\n    badge?: string\n  }>\n}\n\nexport default function Features({ headline, description, comparison, additionalFeatures }: FeaturesProps) {\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        {/* Main Comparison */}\n        <div className=\"bg-gradient-to-r from-red-50 via-white to-green-50 rounded-2xl p-8 mb-16\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Left Side */}\n            <div className=\"text-center\">\n              <div className=\"relative mb-6\">\n                <Image\n                  src={comparison.leftSide.image}\n                  alt={comparison.leftSide.title}\n                  width={400}\n                  height={300}\n                  className=\"rounded-xl shadow-lg mx-auto\"\n                />\n                <div className=\"absolute -top-3 -left-3 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-semibold\">\n                  Before\n                </div>\n              </div>\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                {comparison.leftSide.title}\n              </h3>\n              <p className=\"text-gray-600 mb-6\">\n                {comparison.leftSide.subtitle}\n              </p>\n              \n              <div className=\"space-y-3\">\n                {comparison.leftSide.features.map((feature, index) => (\n                  <div key={index} className=\"flex items-center justify-start\">\n                    {feature.included ? (\n                      <Check className=\"h-5 w-5 text-green-500 mr-3\" />\n                    ) : (\n                      <X className=\"h-5 w-5 text-red-500 mr-3\" />\n                    )}\n                    <span className={`text-sm ${\n                      feature.included ? 'text-gray-700' : 'text-gray-400 line-through'\n                    }`}>\n                      {feature.text}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            {/* Arrow */}\n            <div className=\"hidden lg:flex items-center justify-center\">\n              <div className=\"w-16 h-16 bg-blue-600 rounded-full flex items-center justify-center shadow-lg\">\n                <ArrowRight className=\"h-8 w-8 text-white\" />\n              </div>\n            </div>\n            \n            {/* Right Side */}\n            <div className=\"text-center\">\n              <div className=\"relative mb-6\">\n                <Image\n                  src={comparison.rightSide.image}\n                  alt={comparison.rightSide.title}\n                  width={400}\n                  height={300}\n                  className=\"rounded-xl shadow-lg mx-auto\"\n                />\n                <div className=\"absolute -top-3 -right-3 bg-green-500 text-white px-3 py-1 rounded-full text-sm font-semibold\">\n                  After\n                </div>\n              </div>\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                {comparison.rightSide.title}\n              </h3>\n              <p className=\"text-gray-600 mb-6\">\n                {comparison.rightSide.subtitle}\n              </p>\n              \n              <div className=\"space-y-3\">\n                {comparison.rightSide.features.map((feature, index) => (\n                  <div key={index} className=\"flex items-center justify-start\">\n                    {feature.included ? (\n                      <Check className=\"h-5 w-5 text-green-500 mr-3\" />\n                    ) : (\n                      <X className=\"h-5 w-5 text-red-500 mr-3\" />\n                    )}\n                    <span className={`text-sm ${\n                      feature.included ? 'text-gray-700 font-medium' : 'text-gray-400 line-through'\n                    }`}>\n                      {feature.text}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Additional Features */}\n        {additionalFeatures && (\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {additionalFeatures.map((feature, index) => (\n              <div key={index} className=\"text-center group\">\n                <div className=\"relative mb-4\">\n                  <Image\n                    src={feature.image}\n                    alt={feature.title}\n                    width={300}\n                    height={200}\n                    className=\"rounded-lg shadow-md mx-auto transition-transform group-hover:scale-105\"\n                  />\n                  {feature.badge && (\n                    <div className=\"absolute -top-2 -right-2 bg-yellow-400 text-yellow-900 px-2 py-1 rounded-full text-xs font-bold flex items-center\">\n                      <Trophy className=\"h-3 w-3 mr-1\" />\n                      {feature.badge}\n                    </div>\n                  )}\n                </div>\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  {feature.title}\n                </h4>\n                <p className=\"text-gray-600 text-sm\">\n                  {feature.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </section>\n  )\n}"
    },
    {
      "id": "features-floating-cards",
      "name": "Floating Feature Cards",
      "description": "Modern floating cards with glassmorphism effects and animated interactions",
      "tags": ["floating", "glassmorphism", "modern", "animated", "cards"],
      "style": "modern-glassmorphism",
      "complexity": "medium",
      "features": ["floating-cards", "glassmorphism", "animations", "modern-design"],
      "suitable_for": ["modern", "tech", "creative", "premium", "innovative"],
      "template": "import Image from 'next/image'\nimport { Sparkles, Zap, Shield, Rocket } from 'lucide-react'\n\ninterface FeaturesProps {\n  headline: string\n  description: string\n  features: Array<{\n    icon: string\n    title: string\n    description: string\n    image: string\n    color: string\n  }>\n}\n\nconst iconMap = {\n  sparkles: Sparkles,\n  zap: Zap,\n  shield: Shield,\n  rocket: Rocket\n}\n\nconst colorMap = {\n  blue: 'from-blue-500/20 to-cyan-500/20 border-blue-500/30',\n  purple: 'from-purple-500/20 to-pink-500/20 border-purple-500/30',\n  green: 'from-green-500/20 to-emerald-500/20 border-green-500/30',\n  orange: 'from-orange-500/20 to-red-500/20 border-orange-500/30'\n}\n\nexport default function Features({ headline, description, features }: FeaturesProps) {\n  return (\n    <section className=\"py-20 relative overflow-hidden\">\n      {/* Background */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900\" />\n      <div className=\"absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cg fill=\"none\" fill-rule=\"evenodd\"%3E%3Cg fill=\"%23ffffff\" fill-opacity=\"0.05\"%3E%3Ccircle cx=\"30\" cy=\"30\" r=\"2\"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-40\" />\n      \n      <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-white mb-4\">\n            {headline}\n          </h2>\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\n            {description}\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {features.map((feature, index) => {\n            const IconComponent = iconMap[feature.icon as keyof typeof iconMap] || Sparkles\n            const colorClasses = colorMap[feature.color as keyof typeof colorMap] || colorMap.blue\n            \n            return (\n              <div\n                key={index}\n                className={`group relative p-6 rounded-2xl backdrop-blur-lg bg-gradient-to-br ${colorClasses} border border-white/20 hover:border-white/40 transition-all duration-300 hover:transform hover:scale-105 hover:-translate-y-2`}\n                style={{\n                  animation: `float ${3 + index * 0.5}s ease-in-out infinite`,\n                  animationDelay: `${index * 0.2}s`\n                }}\n              >\n                {/* Floating orb */}\n                <div className=\"absolute -top-3 -right-3 w-6 h-6 bg-white/20 rounded-full blur-sm group-hover:bg-white/40 transition-colors\" />\n                \n                <div className=\"relative z-10\">\n                  <div className=\"w-12 h-12 bg-white/10 rounded-xl flex items-center justify-center mb-4 group-hover:bg-white/20 transition-colors\">\n                    <IconComponent className=\"h-6 w-6 text-white\" />\n                  </div>\n                  \n                  <h3 className=\"text-lg font-semibold text-white mb-3\">\n                    {feature.title}\n                  </h3>\n                  \n                  <p className=\"text-gray-300 text-sm mb-4\">\n                    {feature.description}\n                  </p>\n                  \n                  <div className=\"relative w-full h-32 rounded-lg overflow-hidden\">\n                    <Image\n                      src={feature.image}\n                      alt={feature.title}\n                      fill\n                      className=\"object-cover opacity-80 group-hover:opacity-100 transition-opacity\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent\" />\n                  </div>\n                </div>\n                \n                {/* Glow effect */}\n                <div className=\"absolute inset-0 rounded-2xl bg-gradient-to-br from-white/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity\" />\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      \n      <style jsx>{`\n        @keyframes float {\n          0%, 100% { transform: translateY(0px) rotate(0deg); }\n          50% { transform: translateY(-10px) rotate(1deg); }\n        }\n      `}</style>\n    </section>\n  )\n}"
    }
  ]
}
